---
server:
  contextPath: '/app'
  session:
    # to avoid castexceptions on startup
    persistent: 'false'
spring:
  mvc:
    favicon:
      enabled: 'false'

my:
  oauth2client:
    providerList:
      - google
      - git
      - orcidSandbox
    defaultProvider: 'orcidSandbox'
    specialCase: 'orcidSandbox'
    callBackBase: 'https://orcid-connect01.csc.fi:4443/app/'
    shibSignInPath: 'shib'
    # callBackBase: http://localhost:8080/app/
    providerConfig:
      orcidSandbox:
        clientId: '${orcidSandboxClientId}'
        clientSecret: '${orcidSandboxClientSecret}'
        tokenUriStr: 'https://api.sandbox.orcid.org/oauth/token'
        authUriStr: 'http://sandbox.orcid.org/oauth/authorize'
        scope: '/authenticate'
        userInfoUri: 'https://api.sandbox.orcid.org/orcid_id'
        showLogin: true
      
  pushInterfaces:
    - uniarts
    - hakaTest
  pushInterfaceSpecs:
    uniarts:
      idp: 'https://idp.testshib.org/idp/shibboleth'
      relayerImplClass: 'fi.csc.orcidconnect.push.rest.RestJsonClient'
      restUrl: 'https://demo9650738.mockable.io/identities'
      authUser: 'user'
      authPass: 'pass'
    hakaTest:
      idp: 'https://testidp.funet.fi/idp/shibboleth'
      relayerImplClass: 'fi.csc.orcidconnect.push.soap.MockSoapClient'
      schemaPackage: 'fi.csc.orcidconnect.push.soap.schema.csc'
      soapUrl: 'https://demo9650738.mockable.io/mockProvisioningBinding'
      soapAction: 'http://www.novell.com/provisioning/service/receive'
      authUser: 'test'
      authPass: 'test'
  orcidAdminList:
    - '0000-0003-0833-4032'
  controllerConfig:
    shibAttrKeys:
      - Shib-Identity-Provider
      - eppn
      - Shib-Application-ID
      - persistent-id
      - Shib-Session-ID
      - Shib-AuthnContext-Decl
      - Shib-Authentication-Instant
      - entitlement
      - Shib-Assertion-Count
      - Shib-Session-Index
      - targeted-id
      - Shib-AuthnContext-Class
      - Shib-Cookie-Name
      - affiliation
      - REMOTE_USER
      - Shib-Authentication-Method
      - unscoped-affiliation
    userHiddenAttrs:
      - access_token
      - scope
      - token_type
      - expires_in
    shibAttrNameIdP: Shib-Identity-Provider
    shibAttrNameEppn: eppn 
    authNameOrcid: orcid
    userMatcherString: git|google|orcidSandbox

# Be aware with leading white space on resource
# variables. They will cause extra characters
# on oauth ids and authentication will fail

# Google OAuth2 settings
google:
  clientId: '${clientId}'
  clientSecret: '${clientSecret}'
  tokenUriStr: 'https://accounts.google.com/o/oauth2/token'
  authUriStr: 'https://accounts.google.com/o/oauth2/auth'
  scope: 'profile'
  userInfoUri: 'https://www.googleapis.com/userinfo/v2/me'

# Git OAuth2 settings
git:
  clientId: '${gitClientId}'
  clientSecret: '${gitClientSecret}'
  tokenUriStr: 'https://github.com/login/oauth/access_token'
  authUriStr: 'https://github.com/login/oauth/authorize'
  # only read access when 
  # scope is not defined
  scope: 'user'
  userInfoUri: 'https://api.github.com/user'

orcidSandbox:
  clientId: '${orcidSandboxClientId}'
  clientSecret: '${orcidSandboxClientSecret}'
  tokenUriStr: 'https://api.sandbox.orcid.org/oauth/token'
  authUriStr: 'http://sandbox.orcid.org/oauth/authorize'
  scope: '/authenticate'
  userInfoUri: 'https://api.sandbox.orcid.org/orcid_id'
  showLogin: true
