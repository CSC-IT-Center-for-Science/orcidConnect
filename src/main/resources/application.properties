# avoid castexceptions on startup
server.session.persistent=false
spring.mvc.favicon.enabled=false
server.contextPath=/app
logging.level.org.springframework.ws.client. = TRACE
logging.level. = TRACE
logging.level.org.apache. =INFO
logging.level.org.springframework.web. = INFO

# define authentication providers in use
my.oauth2client.providerList = google,git,orcidSandbox
my.oauth2client.defaultProvider = orcidSandbox
my.oauth2client.specialCase = orcidSandbox
#my.oauth2client.callBackBase = http://localhost:8080/app/
my.oauth2client.callBackBase = https://orcid-connect01.csc.fi:4443/app/

# Be aware with leading white space on resource
# variables. They will cause extra characters
# on oauth ids and authentication will fail
# TODO: chomp

# Google OAuth2 settings 
google.clientId = ${clientId}
google.clientSecret = ${clientSecret}
google.tokenUriStr = https://accounts.google.com/o/oauth2/token
google.authUriStr = https://accounts.google.com/o/oauth2/auth
google.scope = profile
google.userInfoUri = https://www.googleapis.com/userinfo/v2/me

# Git OAuth2 settings 
git.clientId = ${gitClientId}
git.clientSecret = ${gitClientSecret}
git.tokenUriStr = https://github.com/login/oauth/access_token
git.authUriStr = https://github.com/login/oauth/authorize
#git.scope = user # only read access when scope is not defined
git.userInfoUri = https://api.github.com/user

orcidSandbox.clientId = ${orcidSandboxClientId}
orcidSandbox.clientSecret = ${orcidSandboxClientSecret}
orcidSandbox.tokenUriStr = https://api.sandbox.orcid.org/oauth/token
orcidSandbox.authUriStr = http://sandbox.orcid.org/oauth/authorize
orcidSandbox.scope = /authenticate
orcidSandbox.userInfoUri = https://api.sandbox.orcid.org/orcid_id
